base_url: http://teamrecon.nayeem.co/

AUTH: ==========================================================================
User Login: logs in user
    url: base_url/acct/login
    method: POST
    data: sign_in_username_email, sign_in_password
    example request with JSON:
        data={ "sign_in_username_email" : "user1", "sign_in_password" : "pass" }
    example request with post data:
        sign_in_username_email=user1&sign_in_password=pass
    good response:
        {"success":true}
    bad response:
        { "success" : true, "reason" : "signed_in", "reason_text" : "Already logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }
        { "success" : false, "reason" : "login_error", "reason_text" : "Username/email and password pair not found" }

User Logout: logs out user
    url: base_url/acct/logout
    method: POST
    data: logout
    example request with JSON:
        data={ "logout" : true }
    example request with post data:
        logout=true
    good response:
        { "success" : true }
    bad response:
        { "success" : true, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }


User Register: registers user and logs in with newly registered account
    url: base_url/acct/register
    method: POST
    data: sign_up_email, sign_up_password
    example request with JSON:
        data={ "sign_up_email" : "user1@fake.net", "sign_up_password" : "pass" }
    example request with post data;
        sign_up_email=user1@fake.net&sign_up_password=pass
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_in", "reason_text" : "Already logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }
        { "success" : false, "reason" : "email_taken", "reason_text" : "The email is in use" }


User info: retrieve user info
    url: base_url/acct/user
    method: GET
    data: account_id (defaults to current user)
    example request:
        base_url/acct/user?account_id=7 - gets info on user 7
        base_url/acct/user - gets info on currently logged in user
    good response:
        {
          "success": true,
          "data": {
            "id": "1",
            "email": "itsnayeem@gmail.com",
            "createdon": "2012-01-27 22:02:44",
            "lastsignedinon": "2012-02-05 11:18:05",
            "fname": "Shah",
            "lname": "Neezy",
            "birthday": "0000-00-00",
            "gender": null,
            "interested_in": null,
            "profile_pic_url": null,
            "plate_id": "1"
          }
        }
    bad response:
        { "success": false, "reason": "invalid_input", "reason_text": "Account id not given and user not logged in" }

Update profile: sets profile field for given user
    url: base_url/acct/update_profile
    method: POST
    data: fname, lname, birthday, gender, interested_in, profile_pic_url, account_id (defaults to current user, specify if other user)
    example request with JSON:
        data={ "fname" : "John", "lname" : "Smith" }
        data={ "profile_pic_url" : "http://someurl/some/path/pic.jpg", "account_id" : 8 }
    example request with post data;
        fname=John&lname=Smith
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in and account_id not specified" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }

Change password:
    url: base_url/acct/change_password
    method: POST
    data: password_new
    example request with JSON:
        data={ "password_new" : "apples" }
    example request with post data;
        password_new=apples
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }

Forgot password:
    url: base_url/acct/forgot_password
    method: POST
    data: forgot_password_email
    example request with JSON:
        data={ "forgot_password_email" : "user1@fake.com" }
    example request with post data;
        forgot_password_email=user1@fake.com
    good response:
        { 
            "success" : true,
            (temporary until we actually email users)
            "reset_url" : "http://base_url/acct/reset_password?id=1&token=kjh123k"
        }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }
        { "success" : false, "reason" : "login_error", "reason_text" : "Email not found" }

Reset password: logs the user into their account via url (1 time use). should then be redirected to change_password
    url: base_url/acct/reset_password
    method: GET
    data: id, token
    example request;
        base_url/acct/reset_password?id=1&token=kjh123k
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Account not found" }


PLATE: =========================================================================
get:
    url: base_url/plate/get
    method: GET
    data: (plate && state) | plate_id (defaults to logged in user's primary car)
    example request:
        base_url/plate/get
        base_url/plate/get?plate_id=1
        base_url/plate/get?plate=4EKb607&state=CA
    good response:
        {
          "success": true,
          "data": {
            "id": "1",
            "plate": "4EKB607",
            "account_id": "1",
            "make": "Nissan",
            "model": "Sentra",
            "color": "green",
            "year": "1999-00-00",
            "state": "CA",
            "createdon": "2012-02-02 16:44:00",
            "access": "4",
            "plate_pic_url": null,
            "lat": "12.3123",
            "lon": "33.12314"
          }
        }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Account id not given and user not logged in" }

get_by_account:
    url: base_url/plate/get_by_account
    method: GET
    data: account_id (defaults to logged in user)
    example request:
        base_url/plate/get_by_account
        base_url/plate/get_by_account?account_id=1
    good response:
        {
        "success": true,
        "data": [{
            "id": "1",
            "plate": "4EKB607",
            "account_id": "1",
            "make": "Nissan",
            "model": "Sentra",
            "color": "green",
            "year": "1999-00-00",
            "state": "CA",
            "createdon": "2012-02-02 16:44:00",
            "access": "4",
            "plate_pic_url": "220px-Liliumbulbiferumflowertop.jpg",
            "lat": "37.785834",
            "lon": "-122.406417"
        }, {
            "id": "7",
            "plate": "TEST1222",
            "account_id": "1",
            "make": "honda",
            "model": "accord",
            "color": "brown",
            "year": "1990-02-08",
            "state": "IL",
            "createdon": "0000-00-00 00:00:00",
            "access": "3",
            "plate_pic_url": "",
            "lat": null,
            "lon": null
        }]
        }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Account id not given and user not logged in" }

get_wall:
    url: base_url/plate/get_wall
    method: GET
    data: plate_id (defaults to logged in user's primary car)
    example request:
        base_url/plate/get_wall
        base_url/plate/get_wall?plate_id=1
    good response:
        {
          "success": true,
          "data": {
            "5": {
              "id": "5",
              "plate_id": "1",
              "account_id": "1",
              "content": null,
              "postedon": "2012-02-04 17:14:19",
              "parent_id": "0",
              "avg_rating": "0",
              "deletedon": null,
              "fname": "Shah",
              "lname": "Neezy",
              "profile_pic_url": null,
              "comments": []
            },
            "7": {
              "id": "7",
              "plate_id": "1",
              "account_id": "1",
              "content": "testing 2",
              "postedon": "2012-02-04 17:15:01",
              "parent_id": "0",
              "avg_rating": "0",
              "deletedon": null,
              "fname": "Shah",
              "lname": "Neezy",
              "profile_pic_url": null,
              "comments": [{
                "id": "8",
                "plate_id": "1",
                "account_id": "1",
                "content": "wazza",
                "postedon": "2012-02-05 16:50:16",
                "parent_id": "7",
                "avg_rating": "0",
                "deletedon": null,
                "fname": "Shah",
                "lname": "Neezy",
                "profile_pic_url": null
              }]
            },
            "8": {
              "id": "8",
              "plate_id": "1",
              "account_id": "1",
              "content": "wazza",
              "postedon": "2012-02-05 16:50:16",
              "parent_id": "7",
              "avg_rating": "0",
              "deletedon": null,
              "fname": "Shah",
              "lname": "Neezy",
              "profile_pic_url": null,
              "comments": []
            }
          }
        }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Plate id not given and user not logged in" }

update_plate:
    url: base_url/plate/update_plate
    method: POST
    data: plate_id, account_id, make, model, color, year, state, access, plate_pic_url, lat, lon
    example request with JSON:
        data={ "plate_id" : "3", "make" : "honda", "model" : "accord" }
    example request with post data;
        plate_id=3&make=honda&model=accord
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }

update_location:
    url: base_url/plate/update_location
    method: POST
    data: plate_id, lat, lon
    example request with JSON:
        data={ "plate_id" : "3", "lat" : "12.3312", "lon" : "30.1123" }
    example request with post data;
        plate_id=3&lat=12.3312&lon=30.1123
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }

post:
    url: base_url/plate/post
    method: POST
    data: plate_id, content, parent_id (determines if it's a post or comment, comments have parents)
    example request with JSON:
        data={ "plate_id" : "3", "content" : "sup girl", "parent_id" : "0" }
        data={ "plate_id" : "3", "content" : "heyyyy", "parent_id" : "9" }
    example request with post data;
        plate_id=3&content=sup+girl&parent_id=0
        plate_id=3&content=heyyyy&parent_id=9
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in and account_id not specified" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }

delete:
    url: base_url/plate/delete
    method: POST
    data: wall_post_id
    example request with JSON:
        data={ "wall_post_id" : "3" }
    example request with post data;
        wall_post_id=3
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in and account_id not specified" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }
        { "success" : false, "reason" : "not_owner", "reason_text" : "User is not owner of comment or plate" }

assoc_user:
    url: base_url/plate/assoc_user
    method: POST
    data: plate_id, account_id (defaults to currently logged in user)
    example request with JSON:
        data={ "plate_id" : "3" }
    example request with post data;
        plate_id=3&account_id=1
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in and account_id not specified" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }
        { "success" : false, "reason" : "taken", "reason_text" : "Plate already associated with a user" }

FAVORITES: =====================================================================

add:    
    url: base_url/favorite/add
    method: POST
    data: target_id (account id of person to request fav with)
    example request with JSON:
        data={ "target_id" : "1"}
    example request with post data;
        target_id=1
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }
        { "success" : false, "reason" : "already_favorited", "reason_text" : "Already a favorite" }

confirm: confirm pending friend request
    url: base_url/favorite/confirm
    method: POST
    data: target_id (account id of person to remove)
    example request with JSON:
        data={ "target_id" : "1"}
    example request with post data;
        target_id=1
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Account id not given and user not logged in OR no target id" }

remove:    
    url: base_url/favorite/remove
    method: POST
    data: target_id (account id of person to remove)
    example request with JSON:
        data={ "target_id" : "1"}
    example request with post data;
        target_id=1
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }

get: get added users
    url: base_url/favorite/get
    method: GET
    data: account_id (defaults to logged in user)
    example request:
        base_url/favorite/get
        base_url/favorite/get?account_id=1
    good response:
        {
          "success": true,
          "data": [{
            "id": "1",
            "fname": "Shah",
            "lname": "Neezy",
            "profile_pic_url": null
          }]
        }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Account id not given and user not logged in" }

get_pending: list friend requests
    url: base_url/favorite/get_pending
    method: GET
    data: account_id (defaults to logged in user)
    example request:
        base_url/favorite/get_pending
        base_url/favorite/get_pending?account_id=3
    good response:
        {
          "success": true,
          "data": [{
            "id": "1",
            "fname": "Shah",
            "lname": "Neezy",
            "profile_pic_url": null
          }]
        }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Account id not given and user not logged in" }

check:
    url: base_url/favorite/check
    method: GET
    data: favorite_id, account_id (defaults to logged in user)
    example request:
        base_url/favorite/check?favorite_id=2
    good response:
        {
          "success": true,
          "data": {
              "is_favorite": false,
              "is_pending": false
          }
        }
     bad response
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Account id not given and user not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Favorite ID not given" }
        { "success" : false, "reason" : "self_check", "reason_text" : "You cannot be friends with yourself" }

FOLLOWERS: =====================================================================

add:    
    url: base_url/follower/add
    method: POST
    data: plate_id (plate id of plate to request follow)
    example request with JSON:
        data={ "plate_id" : "1"}
    example request with post data;
        plate_id=1
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }
        { "success" : false, "reason" : "already_following", "reason_text" : "Already following" }

remove:    
    url: base_url/follower/remove
    method: POST
    data: plate_id (plate id of plate to unfollow)
    example request with JSON:
        data={ "plate_id" : "1"}
    example request with post data;
        plate_id=1
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }

get: get added users
    url: base_url/follower/get
    method: GET
    data: account_id (defaults to logged in user)
    example request:
        base_url/follower/get
        base_url/follower/get?account_id=1
    good response:
        {
          "success": true,
          "data": [{
            "id": "2",
            "plate": "KLK131",
            "plate_pic_url": null
          }]
        }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Account id not given and user not logged in" }

check:
    url: base_url/follower/check
    method: GET
    data: plate_id, account_id (defaults to logged in user)
    example request:
        base_url/follower/check?plate_id=2
    good response:
        {
          "success": true,
          "data": {
              "is_following": true
          }
        }
     bad response
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Account id not given and user not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Favorite ID not given" }
        { "success" : false, "reason" : "self_check", "reason_text" : "You cannot follow your own plate" }

FIVE_STAR ======================================================================

rate:
    url: base_url/five_star/rate
    method: POST
    data: wall_post_id, rating
    example request with JSON:
        data={ "wall_post_id" :1, "rating" : 3 }
    example request with post data;
        wall_post_id=1&rating=3
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }

get: get ratings on a post
    url: base_url/five_star/get
    method: GET
    data: wall_post_id
    example request:
        base_url/five_star/get?wall_post_id=1
    good response:
        {
          "success": true,
          "data": [{
            "id": "1",
            "wall_post_id": "1",
            "account_id": "1",
            "rating": "4",
            "postedon": "2012-02-07 11:37:22"
          }, {
            "id": "2",
            "wall_post_id": "1",
            "account_id": "2",
            "rating": "2",
            "postedon": "2012-02-07 11:44:24"
          }]
        }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "No wall_post_id" }

PRIVATE MESSAGES ===============================================================

send:
    url: base_url/pm/send
    method: POST
    data: receiver_id, content
    example request with JSON:
        data={ "receiver_id" :1, "content" : "hi" }
    example request with post data;
        receiver_id=1&content=hi
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason" : "signed_out", "reason_text" : "Not logged in" }
        { "success" : false, "reason" : "invalid_input", "reason_text" : "Invalid post data" }

get: get private messages
    url: base_url/pm/get
    method: GET
    data: 
    example request:
        base_url/pm/get
    good response:
        {
          "success": true,
          "data": {
            "3": [{
                  "id": "5",
                  "sender_id": "1",
                  "receiver_id": "3",
                  "content": "go away",
                  "senton": "2012-02-05 10:47:10"
                }, {
                  "id": "4",
                  "sender_id": "3",
                  "receiver_id": "1",
                  "content": "y u no answer???!",
                  "senton": "2012-02-05 10:46:10"
                }, {
                  "id": "3",
                  "sender_id": "3",
                  "receiver_id": "1",
                  "content": "sup sexy",
                  "senton": "2012-02-05 10:45:10"
                }],
            "2": [{
                  "id": "2",
                  "sender_id": "2",
                  "receiver_id": "1",
                  "content": "hello",
                  "senton": "2012-02-05 10:44:10"
                }, {
                  "id": "1",
                  "sender_id": "1",
                  "receiver_id": "2",
                  "content": "hi",
                  "senton": "2012-02-05 10:43:10"
                }],
            "accounts": [{
                  "id": "1",
                  "email": "itsnayeem@gmail.com",
                  "fname": "Shah",
                  "lname": "Neezy",
                  "profile_pic_url": null
                }, {
                  "id": "2",
                  "email": "fake@email.com",
                  "fname": "Stalker",
                  "lname": "Guy",
                  "profile_pic_url": null
                }, {
                  "id": "3",
                  "email": "mark@marneezy.com",
                  "fname": null,
                  "lname": null,
                  "profile_pic_url": null
                }]
          }
        }
    bad response:
        { "success" : false, "reason" : "invalid_input", "reason_text" : "No wall_post_id" }

UTIL ===========================================================================

do_upload:
    url: base_url/util/do_upload
    method: multipart POST
    data: FILE, f(GET) (key for file data - default is "upload")
    example request with post data;
        base_url/util/do_upload?f=file_upload_field_name
    good response:
        { "success" : true }
    bad response:
        { "success" : false, "reason_text" : "Not logged in" }
 
get_plate_image:
    url: base_url/util/get_plate_image
    method: GET
    data:  plate (default empty), state (default "PM")
    example request:
        base_url/util/get_plate_image
        base_url/util/get_plate_image?plate=4ekb607&state=CA
    good response:
        the image
    bad response:
        not the image

